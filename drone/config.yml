kind: pipeline
type: docker
name: default

# Setup steps
steps:
- name: refresh-build-image
  image: docker:latest
  volumes:
    - name: docker_sock
      path: /var/run/docker.sock
  commands:
    - docker build -t tovaritch-build-image:latest -f drone/dockerfile.conf .

# API
- name: api-lint
  image: tovaritch-build-image
  pull: if-not-exists
  commands:
  - bash drone/ci.sh api-lint
  depends_on: [ 'refresh-build-image' ]

- name: api-tests
  image: tovaritch-build-image
  pull: if-not-exists
  commands:
  - bash drone/ci.sh api-tests
  depends_on: [ 'refresh-build-image' ]

# UI
- name: ui-setup
  image: tovaritch-build-image
  pull: if-not-exists
  commands:
  - bash drone/ci.sh ui-setup
  depends_on: [ 'refresh-build-image' ]

- name: ui-lint
  image: tovaritch-build-image
  pull: if-not-exists
  commands:
  - bash drone/ci.sh ui-lint
  depends_on: [ 'ui-setup' ]

- name: ui-tests
  image: tovaritch-build-image
  pull: if-not-exists
  commands:
  - bash drone/ci.sh ui-tests
  depends_on: [ 'ui-setup' ]

- name: ui-build
  image: tovaritch-build-image
  pull: if-not-exists
  commands:
  - bash drone/ci.sh ui-build
  depends_on: [ 'ui-setup' ]

# E2E
- name: e2e-tests
  image: tovaritch-build-image
  pull: if-not-exists
  commands:
  - bash drone/ci.sh e2e-tests
  depends_on: [ 'ui-build' ]

volumes:
  - name: docker_sock
    host:
      path: /var/run/docker.sock

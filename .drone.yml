kind: pipeline
type: docker
name: default

steps:
- name: setup-build-env
  image: docker:latest
  volumes:
    - name: docker_sock
      path: /var/run/docker.sock
  commands:
    - docker build -t stjv/kileed-build-env:latest -f scripts/drone-dockerfile.conf .

- name: pylint
  image: stjv/kileed-build-env
  pull: if-not-exists
  commands:
  - bash scripts/drone.sh pylint
  depends_on: [ 'setup-workspace' ]

- name: pydocstyle
  image: stjv/kileed-build-env
  pull: if-not-exists
  commands:
  - bash scripts/drone.sh pydocstyle
  depends_on: [ 'setup-workspace' ]

- name: eslint
  image: stjv/kileed-build-env
  pull: if-not-exists
  commands:
  - bash scripts/drone.sh eslint
  depends_on: [ 'setup-workspace' ]

- name: api-unit-tests
  image: stjv/kileed-build-env
  pull: if-not-exists
  commands:
  - bash scripts/drone.sh api-unit-tests
  depends_on: [ 'setup-workspace' ]

- name: ui-unit-tests
  image: stjv/kileed-build-env
  pull: if-not-exists
  commands:
  - bash scripts/drone.sh ui-unit-tests
  depends_on: [ 'setup-workspace' ]

- name: build-ui
  image: stjv/kileed-build-env
  pull: if-not-exists
  commands:
  - bash scripts/drone.sh build-ui
  depends_on:
  - 'pylint'
  - 'pydocstyle'
  - 'eslint'
  - 'api-unit-tests'
  - 'ui-unit-tests'

- name: e2e-tests
  image: stjv/kileed-build-env
  pull: if-not-exists
  commands:
  - bash scripts/drone.sh e2e-tests
  depends_on: ['build-ui']

volumes:
  - name: docker_sock
    host:
      path: /var/run/docker.sock